#!/bin/bash
TEMPLATEDIR=/web/DEFAULT/conf
HTTPDCONF=${TEMPLATEDIR}/template.conf
SSLCONF=${TEMPLATEDIR}/ssl-template.conf
DEVSSHKEYS=${TEMPLATEDIR}/authorized_keys2
VHOSTCONF=/etc/httpd/conf.d/z-vhost.conf

### Update the $VHOSTCONF
cat > $VHOSTCONF << EOF
### Commerce Kitchen Virtual Hosts
#
## DO NOT EDIT THIS FILE DIRECTLY
## -- SEE /root/bin/updateAllWebConfigs
##
EOF

for SITE in /web/*; do
	domain=`basename $SITE`
	
	# Skip the DEFAULT directory
	if [ $domain == "DEFAULT" ]; then continue; fi

	owner=`echo $domain | cut -f 1 -d .`
	group=$owner # group same as owner (for now)
	SEDTAGSWAPS="-e s/DOMAIN/$domain/g"
	SEDTAGSWAPS="$SEDTAGSWAPS -e s/OWNER/$owner/g"
	SEDTAGSWAPS="$SEDTAGSWAPS -e s/GROUP/$group/g"

	# Create BASE directories (if they don't exist)
		# $SITE exists, thats why we are in here
	if [ ! -d $SITE/.ssh ]; then
		mkdir $SITE/.ssh
	fi
	if [ ! -d $SITE/conf ]; then
		mkdir $SITE/conf
	fi
	if [ ! -d $SITE/pw ]; then
		mkdir $SITE/pw
	fi
	if [ ! -d $SITE/logs ]; then
		mkdir $SITE/logs
	fi
	if [ ! -d $SITE/stats ]; then
		mkdir $SITE/stats
	fi
	if [ ! -d $SITE/website ]; then
		# assume dev and stage don't exist either and create "default" index.html
		mkdir -p $SITE/website $SITE/stage $SITE/dev
		echo $domain > $SITE/website/index.html
		echo stage.$domain > $SITE/stage/index.html
		echo dev.$domain > $SITE/dev/index.html
	fi

	
	# Add Site Config to the $VHOSTCONF
	echo "Include ${SITE}/conf/httpd.conf" >> $VHOSTCONF

	# Setup SSH Keys
	cat $DEVSSHKEYS > $SITE/.ssh/authorized_keys2
	if [ -f $SITE/conf/authorized_keys2 ]; then
		cat $SITE/conf/authorized_keys2 >> $SITE/.ssh/authorized_keys2
	fi

	## Create httpd.conf from template
	# Apply SED script if it exists - else apply standard sed
	if [ -f $SITE/conf/httpd.conf.sed ]; then
		echo Applying customizations from $SITE/conf/httpd.conf.sed
		sed $SEDTAGSWAPS -f $SITE/conf/httpd.conf.sed $HTTPDCONF > $SITE/conf/httpd.conf
	else
		echo Applying standard configuration to $domain
		sed $SEDTAGSWAPS $HTTPDCONF > $SITE/conf/httpd.conf
	fi

	# Apply SSL
	if [ -f $SITE/conf/ssl/cert.pem -a -f $SITE/conf/ssl/key.pem -a -f $SITE/conf/ssl/ca.pem ]; then
		echo Applying SSL configuration to $domain
		sed $SEDTAGSWAPS $SSLCONF >> $SITE/conf/httpd.conf
	fi

	# Apply "tail" (extra stuff at the end) of template if it exists
	if [ -f $SITE/conf/httpd.conf.tail ]; then
		echo Adding custom lines $SITE/conf/httpd.conf.tail
		cat $SITE/conf/httpd.conf.tail >> $SITE/conf/httpd.conf
	fi

	# Replace Template config with custom if it exists
	if [ -f $SITE/conf/httpd.conf.custom ]; then
		echo Restoring $SITE/conf/httpd.conf.custom
		cp $SITE/conf/httpd.conf.custom  $SITE/conf/httpd.conf
		continue
	fi
	
	# Create a basic htpasswd file for "Stage"
	if [ ! -f $SITE/pw/stage.htpw ]; then
		htpasswd -bc $SITE/pw/stage.htpw $owner welcome123
	fi

	# Apply Permissions
	if [ ! `/usr/bin/id $owner > /dev/null` ]; then
		/bin/chown root:$group $SITE
		/bin/chown -hR root:$group $SITE/.ssh $SITE/conf $SITE/stats $SITE/logs
		/bin/chown -hR $owner:$group $SITE/dev $SITE/stage $SITE/website $SITE/pw
		/bin/chmod 751 $SITE
		/bin/chmod -R u=rwX,g=rX,o= $SITE/.ssh $SITE/conf $SITE/logs $SITE/stats
		/bin/chmod -R u=rwX,g=rX,o=rX $SITE/dev $SITE/stage $SITE/website $SITE/pw
	else
		echo " *** WARNING: $domain - OWNER: $owner does not exist!? Create it and try again!"
	fi
done

echo Updating SELINUX contexts...
chcon -R system_u:object_r:httpd_sys_content_t:s0 /web/*/website
chcon -R system_u:object_r:httpd_config_t:s0 /web/*/conf
chcon -R system_u:object_r:httpd_config_t:s0 /web/*/pw
chcon -R system_u:object_r:httpd_log_t:s0 /web/*/logs
chcon -R system_u:object_r:httpd_sys_content_t:s0 /web/*/stage
chcon -R system_u:object_r:httpd_sys_content_t:s0 /web/*/dev
chcon -R system_u:object_r:httpd_sys_content_t:s0 /web/*/stats


echo .
echo " *** Make sure you TEST then restart apache *** "
httpd -t
